# coding: utf-8

"""
    waf

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class RuleDetailForListVulnerabilityRuleOutput(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'accuracy': 'int',
        'cveid': 'str',
        'custom_system_rule_switch': 'int',
        'description': 'str',
        'risk_level': 'int',
        'rule_id': 'int',
        'rule_name': 'str',
        'rule_set_name': 'str',
        'rule_tag': 'str',
        'rule_type': 'str',
        'subcategory': 'str',
        'update_time': 'str'
    }

    attribute_map = {
        'accuracy': 'Accuracy',
        'cveid': 'CVEID',
        'custom_system_rule_switch': 'CustomSystemRuleSwitch',
        'description': 'Description',
        'risk_level': 'RiskLevel',
        'rule_id': 'RuleID',
        'rule_name': 'RuleName',
        'rule_set_name': 'RuleSetName',
        'rule_tag': 'RuleTag',
        'rule_type': 'RuleType',
        'subcategory': 'Subcategory',
        'update_time': 'UpdateTime'
    }

    def __init__(self, accuracy=None, cveid=None, custom_system_rule_switch=None, description=None, risk_level=None, rule_id=None, rule_name=None, rule_set_name=None, rule_tag=None, rule_type=None, subcategory=None, update_time=None, _configuration=None):  # noqa: E501
        """RuleDetailForListVulnerabilityRuleOutput - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._accuracy = None
        self._cveid = None
        self._custom_system_rule_switch = None
        self._description = None
        self._risk_level = None
        self._rule_id = None
        self._rule_name = None
        self._rule_set_name = None
        self._rule_tag = None
        self._rule_type = None
        self._subcategory = None
        self._update_time = None
        self.discriminator = None

        if accuracy is not None:
            self.accuracy = accuracy
        if cveid is not None:
            self.cveid = cveid
        if custom_system_rule_switch is not None:
            self.custom_system_rule_switch = custom_system_rule_switch
        if description is not None:
            self.description = description
        if risk_level is not None:
            self.risk_level = risk_level
        if rule_id is not None:
            self.rule_id = rule_id
        if rule_name is not None:
            self.rule_name = rule_name
        if rule_set_name is not None:
            self.rule_set_name = rule_set_name
        if rule_tag is not None:
            self.rule_tag = rule_tag
        if rule_type is not None:
            self.rule_type = rule_type
        if subcategory is not None:
            self.subcategory = subcategory
        if update_time is not None:
            self.update_time = update_time

    @property
    def accuracy(self):
        """Gets the accuracy of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501


        :return: The accuracy of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :rtype: int
        """
        return self._accuracy

    @accuracy.setter
    def accuracy(self, accuracy):
        """Sets the accuracy of this RuleDetailForListVulnerabilityRuleOutput.


        :param accuracy: The accuracy of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :type: int
        """

        self._accuracy = accuracy

    @property
    def cveid(self):
        """Gets the cveid of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501


        :return: The cveid of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :rtype: str
        """
        return self._cveid

    @cveid.setter
    def cveid(self, cveid):
        """Sets the cveid of this RuleDetailForListVulnerabilityRuleOutput.


        :param cveid: The cveid of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :type: str
        """

        self._cveid = cveid

    @property
    def custom_system_rule_switch(self):
        """Gets the custom_system_rule_switch of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501


        :return: The custom_system_rule_switch of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :rtype: int
        """
        return self._custom_system_rule_switch

    @custom_system_rule_switch.setter
    def custom_system_rule_switch(self, custom_system_rule_switch):
        """Sets the custom_system_rule_switch of this RuleDetailForListVulnerabilityRuleOutput.


        :param custom_system_rule_switch: The custom_system_rule_switch of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :type: int
        """

        self._custom_system_rule_switch = custom_system_rule_switch

    @property
    def description(self):
        """Gets the description of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501


        :return: The description of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this RuleDetailForListVulnerabilityRuleOutput.


        :param description: The description of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def risk_level(self):
        """Gets the risk_level of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501


        :return: The risk_level of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :rtype: int
        """
        return self._risk_level

    @risk_level.setter
    def risk_level(self, risk_level):
        """Sets the risk_level of this RuleDetailForListVulnerabilityRuleOutput.


        :param risk_level: The risk_level of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :type: int
        """

        self._risk_level = risk_level

    @property
    def rule_id(self):
        """Gets the rule_id of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501


        :return: The rule_id of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :rtype: int
        """
        return self._rule_id

    @rule_id.setter
    def rule_id(self, rule_id):
        """Sets the rule_id of this RuleDetailForListVulnerabilityRuleOutput.


        :param rule_id: The rule_id of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :type: int
        """

        self._rule_id = rule_id

    @property
    def rule_name(self):
        """Gets the rule_name of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501


        :return: The rule_name of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :rtype: str
        """
        return self._rule_name

    @rule_name.setter
    def rule_name(self, rule_name):
        """Sets the rule_name of this RuleDetailForListVulnerabilityRuleOutput.


        :param rule_name: The rule_name of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :type: str
        """

        self._rule_name = rule_name

    @property
    def rule_set_name(self):
        """Gets the rule_set_name of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501


        :return: The rule_set_name of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :rtype: str
        """
        return self._rule_set_name

    @rule_set_name.setter
    def rule_set_name(self, rule_set_name):
        """Sets the rule_set_name of this RuleDetailForListVulnerabilityRuleOutput.


        :param rule_set_name: The rule_set_name of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :type: str
        """

        self._rule_set_name = rule_set_name

    @property
    def rule_tag(self):
        """Gets the rule_tag of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501


        :return: The rule_tag of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :rtype: str
        """
        return self._rule_tag

    @rule_tag.setter
    def rule_tag(self, rule_tag):
        """Sets the rule_tag of this RuleDetailForListVulnerabilityRuleOutput.


        :param rule_tag: The rule_tag of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :type: str
        """

        self._rule_tag = rule_tag

    @property
    def rule_type(self):
        """Gets the rule_type of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501


        :return: The rule_type of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :rtype: str
        """
        return self._rule_type

    @rule_type.setter
    def rule_type(self, rule_type):
        """Sets the rule_type of this RuleDetailForListVulnerabilityRuleOutput.


        :param rule_type: The rule_type of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :type: str
        """

        self._rule_type = rule_type

    @property
    def subcategory(self):
        """Gets the subcategory of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501


        :return: The subcategory of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :rtype: str
        """
        return self._subcategory

    @subcategory.setter
    def subcategory(self, subcategory):
        """Sets the subcategory of this RuleDetailForListVulnerabilityRuleOutput.


        :param subcategory: The subcategory of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :type: str
        """

        self._subcategory = subcategory

    @property
    def update_time(self):
        """Gets the update_time of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501


        :return: The update_time of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this RuleDetailForListVulnerabilityRuleOutput.


        :param update_time: The update_time of this RuleDetailForListVulnerabilityRuleOutput.  # noqa: E501
        :type: str
        """

        self._update_time = update_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(RuleDetailForListVulnerabilityRuleOutput, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RuleDetailForListVulnerabilityRuleOutput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, RuleDetailForListVulnerabilityRuleOutput):
            return True

        return self.to_dict() != other.to_dict()
